@model List<ExamApp.Models.UploadedFile>
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    Layout = "_Layout";
}
<p><button onclick="sortList()">SortByName</button></p>
@if (Model.Count != 0)
{
    foreach (var file in Model)
    {
        <p>Name</p>
        <p>@file.Name</p>
        <p>Description</p>
        <p>@file.Description</p>
        <p><button type="button" onclick="location.href = '@Url.Action("BrowseFile", "Home", new {id=file.Id}, null)'">View</button></p>
        <br /><br />
    }
}
else
{
    <p>Nothing was found.</p>
}

<script>
function sortList() {
  var list, i, switching, b, shouldSwitch;
  list = document.getElementById("id01");
  switching = true;
  /* Make a loop that will continue until
  no switching has been done: */
  while (switching) {
    // start by saying: no switching is done:
    switching = false;
    b = list.getElementsByTagName("LI");
    // Loop through all list-items:
    for (i = 0; i < (b.length - 1); i++) {
      // start by saying there should be no switching:
      shouldSwitch = false;
      /* check if the next item should
      switch place with the current item: */
      if (b[i].innerHTML.toLowerCase() > b[i + 1].innerHTML.toLowerCase()) {
        /* if next item is alphabetically
        lower than current item, mark as a switch
        and break the loop: */
        shouldSwitch = true;
        break;
      }
    }
    if (shouldSwitch) {
      /* If a switch has been marked, make the switch
      and mark the switch as done: */
      b[i].parentNode.insertBefore(b[i + 1], b[i]);
      switching = true;
    }
  }
}
</script>